plugins {
	id 'org.springframework.boot' version '2.4.3-SNAPSHOT'
//	id "com.google.cloud.tools.jib" version "2.8.0"
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'groovy'
}

group = 'zero.our.piece.barbers'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

//apply plugin: "com.google.cloud.tools.jib"

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://plugins.gradle.org/m2/' }
}

ext {
//	set('springCloudGcpVersion', "2.0.0")
//	set('springCloudVersion', "2020.0.1")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-groovy-templates'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
//	implementation 'com.google.cloud:spring-cloud-gcp-starter'
/*	implementation 'org.springframework.cloud:spring-cloud-gcp-starter-data-firestore'
	implementation 'com.google.cloud:spring-cloud-gcp-starter-pubsub'
	implementation 'com.google.cloud:spring-cloud-gcp-starter-storage'
	implementation 'gradle.plugin.com.google.cloud.tools:jib-gradle-plugin:2.8.0'*/
	// https://mvnrepository.com/artifact/org.hibernate/hibernate-validator
	implementation group: 'org.hibernate', name: 'hibernate-validator', version: '7.0.1.Final'

	implementation 'org.codehaus.groovy:groovy'
	// https://mvnrepository.com/artifact/joda-time/joda-time
	implementation group: 'joda-time', name: 'joda-time', version: '2.10.10'

	// https://mvnrepository.com/artifact/org.postgresql/postgresql
	implementation group: 'org.postgresql', name: 'postgresql', version: '42.1.4'
	implementation 'org.liquibase:liquibase-core'
//	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

dependencyManagement {
	imports {
//		mavenBom "com.google.cloud:spring-cloud-gcp-dependencies:${springCloudGcpVersion}"
//		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}
